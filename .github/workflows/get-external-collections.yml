name: ðŸ‘· Get External Collections
run-name: ðŸš€ GEO | On  ${{ github.event.repository.updated_at}} - ${{github.ref_name}} by @${{ github.actor }}

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs at 00:00 every Sunday
  workflow_dispatch:  # Allows manual trigger

jobs:
  download-repos:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Process Repositories
        run: |
            while IFS= read -r repo || [ -n "$repo" ]; do
            repo_name=$(basename -s .git "$repo")
            repo_author=$(basename $(dirname "$repo"))
            repo_path="./external/${repo_author}-${repo_name}"
            if [ -d "$repo_path" ]; then
                echo "Updating repository $repo_path"
                if [ -d "$repo_path/.gitoff" ]; then
                mv "$repo_path/.gitoff" "$repo_path/.git"
                git -C "$repo_path" fetch --all
                git -C "$repo_path" reset --hard HEAD
                git -C "$repo_path" pull --rebase
                mv "$repo_path/.git" "$repo_path/.gitoff"
                else
                echo ".gitoff not found in $repo_path, skipping update."
                fi
            else
                echo "Cloning repository $repo"
                git clone "$repo" "$repo_path" && echo "Cloned $repo_path" || echo "Failed to clone $repo"
            fi
            done < ./external/collections.txt

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "ðŸ‘· chore: update external collections (${{github.ref_name}})[skip ci]"
          git push origin HEAD:${{ github.ref }}