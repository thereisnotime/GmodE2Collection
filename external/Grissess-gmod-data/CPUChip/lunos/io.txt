//LunOS -- Lunar Operating System
//io -- Input/Output

//Defines the utilities and constants that make for shared IO across the LunOS System.

#ifndef LUNOS_IO
#define LUNOS_IO

#define IOCTL_CAN_READ 1
//Expects a >0 length buffer. Writes nonzero into the first element if the stream is readable; 0 otherwise.
#define IOCTL_CAN_WRITE 2
//Expects a >0 length buffer. Writes nonzero into the first element if the stream is writeable; 0 otherwise.
#define IOCTL_READ_AVAIL 3
//Expects a >0 length buffer. Writes the number of bytes that can be assuredly read right now into the first element.
//Note that this number is only accurate at the time of the call.
#define IOCTL_WRITE_AVAIL 4
//Expects a >0 length buffer. Writes the number of bytes that can be assuredly written right now into the first element.
//The same note as above applies.
#define IOCTL_CAN_BLOCK 5
//Expects a >0 length buffer. Writes nonzero into the first element if the stream can support blocking calls; 0 otherwise.
#define IOCTL_GET_BLOCKING 6
//Expects a >0 length buffer. Writes the current blocking state to the first element.
#define IOCTL_SET_BLOCKING 7
//Expects a >0 length buffer. Sets the blocking state to the first element of the buffer.
//This may have no effect on some streams; particularly, device streams. If so, the output by IOCTL_GET_BLOCKING will remain unchanged.
#define IOCTL_CAN_SEEK 8
//Expects a >0 length buffer. Writes nonzero to the first element if the stream can be seeked; 0 otherwise.
#define IOCTL_GET_POS 9
//Expects a >0 length buffer. Writes the current position into the first element.
//The current position is defined differently for certain streams (and may be a no-op on some), but it is
//guaranteed that calling IOCTL_SET_POS on the same stream with the value returned in this buffer will, if
//the stream supports seeking at all, restore the position to the same one as when this call was made.
#define IOCTL_SET_POS 10
//Expects a >0 length buffer. Sets the current position to the first element. See above.

#define AVAIL_MAX -1
//The value returned from IOCTL_READ_AVAIL or IOCTL_WRITE_AVAIL when the amount of free space is arbitrary.
//You should ONLY return this if you have a device that can accept a theoretically infinite amount of data;
//storage devices, for example, while large, do have an upper bound.


#define IO_READ 0
//Perform a read.
#define IO_WRITE 1
//Perform a write.

#define NULL 0
//This is useful.

#endif
