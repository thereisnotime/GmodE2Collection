@name Throttle Control
@inputs Ent:entity Up Down Stop Modifier Forward:vector OffAxis:vector
@outputs Throttle
@persist 
@trigger 

if(first()|duped()) {
    runOnTick(1)
    Throttle=0
}

if(tickClk()) {
    UD=Up-Down
    Throttle=Throttle+UD
    if(Throttle<0&(!Modifier)) {
        Throttle=0
    }
    if(Throttle<-500) {
        Throttle=-500
    }
    if(Throttle>500) {
        Throttle=500
    }
    if(Stop) {
        Throttle=0
    }
    if(->Forward&->OffAxis) {
        F=Forward
        O=OffAxis
    } else {
        F=Ent:up()
        O=Ent:right()
    }
    if(Throttle>0|Modifier) {
        O=O:normalized()
        O2=F:cross(O):normalized()
        EV=Ent:vel()
        EM=Ent:mass()
        OV=EV:dot(O)
        O2V=EV:dot(O2)
        AntiOV=EM*(O*-OV+O2*-O2V)/100
        AntiGrav=vec(0, 0, EM*gravity()/65)
        Ent:applyForce(Throttle*Ent:mass()*F+abs(Throttle/10)*AntiOV+AntiGrav)
    }
}
