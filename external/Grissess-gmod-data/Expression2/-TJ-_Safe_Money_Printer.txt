@name [TJ] Safe Money Printer
@inputs Entity:entity
@outputs Length Fire Grab
@persist Env:table Self:entity Angles:angle
@persist Active MinLength MaxLength UseInterval
@trigger 

if( first() ) {
    #include "lib/command"
    #include "lib/entity"
    
    runOnChat(1)
    runOnTick(1)
    
    MinLength = 25
    MaxLength = 340
    UseInterval = 5 * 60 * 1000 # 5 minutes
    
    Self = entity():isWeldedTo()
    Angles = ang(270, Self:angles():yaw(), 0)
    
    function findAndWire(Class:string, Inputs:table, Outputs:table) {
        local Self = entity()
        findIncludeClass(Class)
        findInSphere(Self:pos(), 100)
        local E = find()
        if( E ) {
            for( I=1, Inputs:count() ) {
                Name = Inputs[I, string]
                Self:createWire(E, Name, Name)
            }
            for( I=1, Outputs:count() ) {
                Name = Outputs[I, string]
                E:createWire(Self, Name, Name)
            }
        } else { exit() }
    }
    
    function smpUse() {
        Fire = 1
        printColor(vec(0, 0, 255), "Collecting printed money")
        timer("smpStartUse", UseInterval)
    }
    
    function smpStart(Args:table, Ret:table) {
        Active = 1
        smpUse()
    }
    
    function smpStop(Args:table, Ret:table) {
        Active = 0
        stoptimer("smpStartUse")
    }
    
    function smpCheck(Args:table, Ret:table) {
        if( Entity ) {
            print( Entity:toString() )
        } else {
            printColor(vec(255, 0, 0), "No money printer found.")
        }
    }
    
    Env = newEnv()
    Env:envAddCommand(newCommand("mpstart", "smpStart", ""))
    Env:envAddCommand(newCommand("mpstop", "smpStop", ""))
    Env:envAddCommand(newCommand("mpcheck", "smpCheck", ""))
    
    Length = MaxLength
}

if( !->Fire ) {
    findAndWire("gmod_wire_user", table(), table("Fire"))
}

if( !->Length ) {
    findAndWire("gmod_wire_hydraulic", table(), table("Length"))
}

if( !->Grab ) {
    findAndWire("gmod_wire_grabber", table("Entity"), table("Grab"))
}

if( Fire ) { Fire = 0 }

if( Grab & !Entity ) {
    Grab = 0
    owner():soundPlay(0, 0, "vo/npc/male01/gethellout.wav")
}

if( chatClk(owner()) ) {
    if( Env:envExec(owner():lastSaid()) ) {
        hideChat(1)
    }
}

if( clk("smpStartUse") ) { smpUse() }

if( clk("smpRelease") ) { Grab = 0 }

if( tickClk() ) {
    
    if( Active ) {
        Grab = 1
        if( Length > MinLength ) { Length -= 3 }
    } else {
        if( Length < MaxLength ) { Length += 3 } else { timer("smpRelease", 500) }
    }
    
    Self:fixAngles(Angles)
}
