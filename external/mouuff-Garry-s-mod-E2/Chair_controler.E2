@name Chair Controler 2
@inputs Hud:wirelink PodControler:wirelink Camera:wirelink ChangePlayer
@inputs Shield ShieldOn Power
@outputs Target:entity CamPos:vector CamAng:angle AimPos:vector
@persist Obs:table Target:entity CamPos:vector CamAng:angle AimPos:vector Failed N ChangePlayer Spying
@trigger 

function void setPos(V:vector){
    holoPos(1, holoEntity(1):toWorld(V))
}


W = PodControler:number("W")
S = PodControler:number("S")
A = PodControler:number("A")
D = PodControler:number("D")
R = PodControler:number("R")
Shift = PodControler:number("Shift")

Space = PodControler:number("Space")
ChairActive = PodControler:number("Active")
Bearing = PodControler:number("Bearing")
Elevation = PodControler:number("Elevation")
Attack = PodControler:number("Mouse1")
Follow = PodControler:number("Mouse2")
Light = PodControler:number("Light")

Chair = PodControler:entity("Entity")

if (ChairActive){
    interval(10)
}
else{
    interval(1000)
}

holoAng(1,ang(vec(-Elevation, Bearing-Chair:angles():yaw(), 0)))

if (first() | dupefinished()){
    dsJoinGroup("Security")
    dsSetScope(2)
    
    holoCreate(1)
    holoShadow(1,0)
    holoColor(1,vec(0,0,0),0)
    
    Failed = 0
    N = 0
    
    Hud:egpClear()
    
    Obs = table()
    Obs["EBox",number] = 1
    Obs["EShield",number] = 3
    Obs["ETarget",number] = 4
    Obs["EWatch",number] = 5
    Obs["EPower",number] = 6
    Obs["EAtlantis",number] = 7
    
    
    Hud:egpRoundedBox(Obs["EBox",number],vec2(350,190),vec2(200,200))
    Hud:egpColor(Obs["EBox",number],vec4(0,0,0,150))
    
    Hud:egpText(Obs["ETarget",number], "", vec2(256,256))
    Hud:egpText(Obs["EWatch",number], "", vec2(256,220))
    Hud:egpText(Obs["EPower",number], "", vec2(256,180))
    Hud:egpText(Obs["EShield",number], "", vec2(256,140))
    Hud:egpText(Obs["EAtlantis",number], "", vec2(256,120))
    
    Spying = 0
}

if (Spying){
    holoPos(1, Target:toWorld(vec(0,0,80)))
    if (W|S|A|D){
        Spying = 0
    }
}else{
    if (Light){
        Spying = 1
    }
    if (W){
        if (Shift){
            setPos(vec(50,0,0))
        }
        else{
            setPos(vec(7,0,0))
        }
    }
    elseif (S){
        setPos(vec(-7,0,0))
    }
    if (A){
        setPos(vec(0,5,0))
    }
    elseif(D){
        setPos(vec(0,-5,0))
    }
}
if (R){
    findByClass("player")
    findSortByDistance(holoEntity(1):pos())
    Target = find()
    Hud:egpSetText(Obs["ETarget",number], "Target: "+Target:name())
}

if ((~ChangePlayer&ChangePlayer)|Failed){
    findByClass("player")
    findSortByDistance(entity():pos())
    P = findResult((N%findCount())+1)
    if (P:name() != ""){
        Hud:egpText(Obs["EWatch",number], "Watching: "+P:name(), vec2(256,220))
        holoPos(1,P:pos()+vec(0,0,100))
        Failed = 0
    }
    else{
        Failed = 1
    }
    N+=1
}

if (dsClk("KillAll")){
    Ent = dsGetEntity()
    if (Ent == owner()){
        holoDelete(1)
    }
}

Hud:egpText(Obs["EShield",number], "Shields: "+toString(round(Shield))+"%", vec2(256,180))
Hud:egpText(Obs["EPower",number], "Power: "+toString(round(Power))+"%", vec2(256,140))
Hud:egpText(Obs["EAtlantis",number], "Shield online: "+toString(ShieldOn), vec2(256,100))

CamPos = holoEntity(1):pos()
CamAng = holoEntity(1):angles()
Camera:setVector("Position",CamPos)
Camera:setAngle("Angle",CamAng)

#Camera:setAngle("Angle",ang(vec(-Elevation, Bearing, 0)))

AimPos = rangerOffset(10000,holoEntity(1):pos(),holoEntity(1):forward()):pos()
