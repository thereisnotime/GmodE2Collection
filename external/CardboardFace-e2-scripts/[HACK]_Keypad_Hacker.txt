@persist [Keypads Codes OwnerUse]:array E2Owner:entity [MaxKeypads HasShownPassword]:number
@trigger none
@autoupdate

if (first() | dupefinished()) {
    MaxKeypads = 13 # Keypad gate restriction limit
    
    function void scanForKeypads() {
        Keypads = array()
        OwnerUse = array()
        
        findByModel("models/props_lab/keypad.mdl")
        findSortByDistance(entity():pos())
        Keypads = findToArray()
        
        
        hint("Scan complete! " + Keypads:count() + " keypads found!",3)
        
        local TotalKeypads = Keypads:count()
        if (TotalKeypads > MaxKeypads) {
            hint("Keypad(s) removed due to gate restriction!", 3)
            for(I=1, TotalKeypads - MaxKeypads) {
                Keypads:pop()
            }
        }
        
        print(TotalKeypads + " keypad(s) found:")
        for(A=1, Keypads:count()) {
            print("" + A + ": " + Keypads:entity(A):owner():name())
            OwnerUse[A,number] = Keypads:entity(A):owner():keyUse()
        }
        
        timer("ReScan", 60000) # Auto-rescan every minute
    }
    
    E2Owner = entity():owner()
    runOnTick(1)
    runOnChat(1)
    
    scanForKeypads()
}

if (clk("ReScan")) {
    scanForKeypads()
}

if (chatClk(E2Owner)){
    if(E2Owner:lastSaid() == ".reset") {
        hideChat(1)
        for(I = 1, Keypads:count())
        {
            Keypad = Keypads[I,entity]
            if(E2Owner:aimEntity() == Keypad & E2Owner:shootPos():distance(Keypad:pos()) <= 100){
                hint("Code Reset!",3)
                Codes[I,number] = 0
            }
        }

    } elseif(E2Owner:lastSaid() == ".scan") {
        hideChat(1)
        scanForKeypads()
    }
}

for(A=1, Keypads:count())
{
    # Check if keypad has been removed
    local Keypad = Keypads[A, entity]
    if(Keypad == noentity()) {
        hint("Keypad " + A + " has been removed",3)
        Keypads:removeEntity(A)
        Codes:removeNumber(A)
        OwnerUse:removeNumber(A)
        continue
    }
    
    
    # Check if E2 owner wants to reveal keypad code
    if (E2Owner:keyAttack2()) {
        if (E2Owner:aimEntity() == Keypad & !HasShownPassword & E2Owner:shootPos():distance2(Keypad:pos()) <= 100) {
            Code = Codes[A,number]
            if(Code - 50000 > 0){
                hint("The code is: " + (Code - 50000) + ". Enjoy!",5)
            } else {
                hint("No code entered. Try again later!", 3)
            }
            HasShownPassword = 1
        }
    } elseif (HasShownPassword) {
        HasShownPassword = 0
    }
    
    
    local Owner = Keypad:owner()
    local Down = OwnerUse[A, number]
    local Pressed = Owner:keyUse()
    
    if (Pressed) {
        if (!Down) {
            if(Owner:aimEntity() == Keypad & Owner:shootPos():distance(Keypad:pos()) < 32){
                Code = Codes[A,number]
                #Find Button Pressed
                KPPL = Keypad:toLocal(Keypad:owner():aimPos()):rotate(ang())
                #Line 1
                if(inrange(KPPL:z(),-1.3,0)){
                    #Col 1
                    if(inrange(KPPL:y(),-2.2, -0.95)){Number = 1}
                    #Col 2
                    elseif(inrange(KPPL:y(),-0.6, 0.65)){Number = 2}
                    #Col 3
                    elseif(inrange(KPPL:y(),1, 2.25)){Number = 3}
                }
                #Line 2
                elseif(inrange(KPPL:z(),-2.9,-1.6)){
                    #Col 1
                    if(inrange(KPPL:y(),-2.2 ,-0.95)){Number = 4}
                    #Col 2
                    elseif(inrange(KPPL:y(),-0.6, 0.65)){Number = 5}
                    #Col 3
                    elseif(inrange(KPPL:y(),1, 2.25)){Number = 6}
                }
                #Line 3
                elseif(inrange(KPPL:z(),-4.45,-3.3)){
                    #Col 1
                    if(inrange(KPPL:y(),-2.2 ,-0.95)){Number = 7}
                    #Col 2
                    elseif(inrange(KPPL:y(),-0.6, 0.65)){Number = 8}
                    #Col 3
                    elseif(inrange(KPPL:y(),1, 2.25)){Number = 9}
                }
                elseif(inrange(KPPL:z(),0.3, 1.6)){
                    #Abort
                    if(inrange(KPPL:y(),-2.2, -0.15)){Number = 11}
                    #Accept
                    elseif(inrange(KPPL:y(),0.3, 2.25)){Number = 10}
                }
                
                if (Number){
                    if(Number == 10 & Code < 10000){
                            Code += 50000
                            hint("Code entered: "+(Code - 50000),3)
                    }
                    elseif(Number == 11 & Code < 10000){Code = 0 hint("Code Canceled",3)}
                    elseif(Code < 1000){
                        Code *= 10
                        Code += Number
                        hint(""+Owner:name()+" Pressed: "+Number,3)
                    }
                    Codes[A,number] = Code
                }
            }
            OwnerUse[A, number] = 1
        }
    } elseif (Down) {
        OwnerUse[A,number] = 0
    }
}
