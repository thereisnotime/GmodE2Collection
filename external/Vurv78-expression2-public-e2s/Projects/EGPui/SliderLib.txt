@name libraries.slider
@persist [EGPSLIDERS EGPSREGISTERED LAST_EGPSLIDER_MOVED]:table LIB_EGPSLIDER_CLK
if(first())
{
    runOnKeys(players(),1,array("e"))
    EGPSLIDERS=table()
    function number wirelink:createEGPSlider(EGPIndexes:vector2,[Color]:vector, [Pos Size]:vector2,Radius)
    {
        local EGP_ENTITY = This:entity()
        local EGP_ENTITY_ID = EGP_ENTITY:id()
        if(!EGPSLIDERS:exists(EGP_ENTITY_ID)){EGPSLIDERS[EGP_ENTITY_ID,table]=table()}
        local EGP_SPECIFIC_TABLE=EGPSLIDERS[EGP_ENTITY_ID,table]
        local EGPWL = EGP_ENTITY:wirelink()
        #Makes a table per EGP 
        local Tab = table()
        Tab["EGPIndexes",vector2]=EGPIndexes
        Tab["Color",vector]=Color
        Tab["Value",number]=0
        Tab["Index",number]=EGP_SPECIFIC_TABLE:count()+1
        Tab["Min",number]=(Pos[1]-Size[1]/2)
        Tab["Max",number]=(Pos[1]+Size[1]/2)
        EGP_SPECIFIC_TABLE:pushTable(Tab)
        #EgpIndexes, 1 = line, 2 = circle
        This:egpRoundedBox(EGPIndexes[1],Pos,Size)
        This:egpCircle(EGPIndexes[2],vec2(Pos[1]-Size[1]/2,Pos[2]),vec2(Radius))
        This:egpColor(EGPIndexes[1],Color)
        EGPSREGISTERED[EGP_ENTITY_ID,entity]=EGP_ENTITY
        return Tab["Index",number]
    }
    function number wirelink:setEGPSliderValue(Index:number,SetVal:number)
    {
        local EID = This:entity():id() #entity id of EGP screen
        if(!EGPSLIDERS:exists(EID)){return 0}
        local LocTab=EGPSLIDERS[EID,table][Index,table]
        SetVal=clamp(SetVal,0,1)
        LocTab["Value",number] = SetVal
        This:egpPos(LocTab["EGPIndexes",vector2][2],vec2(SetVal*(LocTab["Max",number]-LocTab["Min",number])+LocTab["Min",number],This:egpPos(LocTab["EGPIndexes",vector2][1])[2]))
        return 1
    }
    function table wirelink:getEGPSliderTable(Ind:number)
    {
        local EID = This:entity():id() #entity id of EGP screen
        if(!EGPSLIDERS:exists(EID)){return table()}
        return EGPSLIDERS[EID,table][Ind,table]
    }
    function number wirelink:getEGPSliderValue(Ind:number)
    {
        local EID = This:entity():id() #entity id of EGP screen
        if(!EGPSLIDERS:exists(EID)){return 0}
        return EGPSLIDERS[EID,table][Ind,table]["Value",number]
    }
    function table clkEGPSliderData()
    {
        if(!LIB_EGPSLIDER_CLK){return table()}
        return table(LIB_EGPSLIDER_CLK,LAST_EGPSLIDER_MOVED)
    }
    function number clkEGPSlider()
    {
        #Returns the value of the latest changed egpslider
        if(!LIB_EGPSLIDER_CLK){return 0}
        return LAST_EGPSLIDER_MOVED["Value",number]
    }
}
if(keyClk())
{
    local EGPCOUNT=EGPSREGISTERED:count()
    local Ply = keyClk()
    
    local AimedEGP = Ply:aimEntity()
    local AimedEGP_ID=AimedEGP:id()
    if(keyClk(Ply)==1&&AimedEGP:type()=="gmod_wire_egp" && EGPSREGISTERED:exists(AimedEGP_ID))
    {
        local SliderCounts = table() #Makes table containing # of sliders in an EGP.
        local EGP_LOCAL_TABLE = EGPSLIDERS[AimedEGP_ID,table] #Table local of all sliders in egp.
        if(!SliderCounts:exists(AimedEGP_ID)){SliderCounts[AimedEGP_ID,number]=EGP_LOCAL_TABLE:count()}
        #If no slidercount for an egp exists, make it with egpsliders table. more efficient than checking each time.
        local SliderCount = SliderCounts[AimedEGP_ID,number]
        local AimedEGPWL = AimedEGP:wirelink()
        local CursorPos=AimedEGPWL:egpCursor(Ply)
        for(I=1,SliderCount) #loops through all sliders in an egp.
        {
            local EGP_LOCAL_X2 = EGP_LOCAL_TABLE[I,table] #Number slider
            local SliderLine = EGP_LOCAL_X2["EGPIndexes",vector2][1] #Index of slider line.
            if(AimedEGPWL:egpObjectContainsPoint(SliderLine,CursorPos))
            {
                local Max = EGP_LOCAL_X2["Max",number]
                local Min = EGP_LOCAL_X2["Min",number]
                local Val = ((CursorPos[1]-Min)/(Max-Min))
                EGP_LOCAL_X2["Value",number]=Val
                local Pos = vec2(CursorPos[1],AimedEGPWL:egpPos(SliderLine)[2])
                AimedEGPWL:egpPos(EGP_LOCAL_X2["EGPIndexes",vector2][2],Pos) #Sets circle pos on slider to cursor pos + line y
                
                LIB_EGPSLIDER_CLK = 1
                LAST_EGPSLIDER_MOVED=EGP_LOCAL_X2
                timer("lastegpsliderunclk5555",5)
            }
        }
    }
}
if(clk("lastegpsliderunclk5555")){LIB_EGPSLIDER_CLK=0}
